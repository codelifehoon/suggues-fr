'use strict'
import request from 'supertest';
import { expect } from 'chai';
import userProcess from '~/service/UserProcess'
import fetch from 'node-fetch';

describe('User Process Test', () => {
    it ('google oauth info test',()=>{
        let json = '{"userNo":-1,"userId":"115485945540287657936","userNm":"장재훈","userPhotos":[{}],"userProvider":"google","userStat":"S1","createDt":"2018-02-22T08:17:25.350Z","createNo":999}';
        let user = JSON.parse(json);

        let userPost = {
            userNo: -1,
            userId: user.id,
            userNm: user.displayName,
            userPhotos: '',
            userProvider: user.provider,
            userStat: 'S1',
            createDt: new Date(),
            createNo: 999,
        };

        if (user.userPhotos ) {
            if (user.userProvider === 'google'){
                userPost.userPhotos =user.userPhotos[0].value
            }
        }


        console.log('#### userNo:' +  JSON.stringify(userPost));

    });

    it ('naver oauth info test',()=>{
        let json = '{"provider":"naver","id":"37302261","displayName":"구루마블","emails":[{"value":"codelife@naver.com"}],"_json":{"email":"codelife@naver.com","nickname":"구루마블","profile_image":"https://phinf.pstatic.net/contact/20180222_261/1519290031277ONKay_JPEG/image.jpg","age":"40-49","birthday":"12-18","id":"37302261"},"accessToken":"AAAAOG2AGTuZXkYMM3nf82VogdOPPrFUUSt0SJCLxTuMdkHsN5K5/PA2ACh1euwUBh77bOU1HqcUiiJLuA+jJDJL9j8="}';
        let user = JSON.parse(json);

        let userPost = {
            userNo: -1,
            userId: user.id,
            userNm: user.displayName,
            userPhotos: '',
            userProvider: user.provider,
            userStat: 'S1',
            createDt: new Date(),
            createNo: 999,
        };

        if (user.provider === 'naver') {
            if (user._json.profile_image)
            {
                userPost.userPhotos = user._json.profile_image;
            }
        }

        console.log('#### userNo:' +  JSON.stringify(userPost));

    });


    it(' userProcess.addUser Test"',  () => {
/*

        let up =  new userProcess();
        let userData = {
            id: 'testuser1',
            displayName: 'dispname',
            photos: 'photo',
            provider: 'testProvider'
        };

         up.addUser(userData);
*/

    });

    it(' userProcess.updateUser Test"', () => {

  /*      let up =  new userProcess();

        // up.updateUser('');
        console.log('##########');*/


    });

    it(' fetch Test"', () => {


//get
        console.log('###get');
        fetch('https://github.com/')
            .then(res => {
                console.log(res.ok);
                console.log(res.status);
                console.log(res.statusText);
                console.log(res.headers.raw());
                console.log(res.headers.get('content-type'));
            });
        /*
        // post
                console.log('###post');
                fetch('http://httpbin.org/post', { method: 'POST', body: 'a=1' })
                    .then(res => res.json())
                    .then(json => console.log(json));

        //etc
                console.log('###etc');
                fetch('https://github.com/')
                    .then(res => res.text())
                    .then(body => console.log(body));
        */

    });


});



